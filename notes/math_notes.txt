...........................................
Derivatives Rules
	Sum / Difference (+ or -) : treat each side as a function that you need to make a derivative of.

	constant = 0, variable = 1 :: x - 1 become 1 - 0
	
	const * var :  D(2x)  ->  2 D(x)  ->  2 * 1

	sqrt(x) : 1 / (2 * sqrt(x))

	Power Rule :  x^2 = D( n*x^n-1 ) = 2x^1
				 example2:	3x^2  ->  3 * 2x^1  ->  6x^1
	
	Product Rule : f() * g() =  f() * g'() + g() * f'();

	Chain Rule :  f(g()) = f'( g() ) * g'();

	Quatient Rule : f() / g() :: g()*f'() - f() * g'() / g() * g()

	inversCOT(x) = -1 / 1 + x^2

	sin(x) = cos(x)
	cos(x) = -sin(x)


...........................................
MISC - GOOD TO KNOW, Some of the stuff can help simplify equations
	cos^2 + sin^2 == 1

	tan = sin / cos

	pythagormean theorem : opposite^2 + adjacent^2 = Hypotenuse^2


	get angle using DOT product of two normalized vector directions
		d = dot(unitVec1, unitVec2);
		angleInRad = acos( clamp(d, -1, 1) )



...........................................
CIRCLES AND ARCS

	Radius = ArcLength / Angle
	ArcLength = Radius * Angle
	Arc / Segment Height = Radius * ( 1 - cos(angle / 2) )
	circleCenterPoint_fromCurve = Radius - Segment Height

	chord length = 2 * Radius * sin( angle / 2 )

	circumference = PI * diameter
	circumference = PI * radius * 2;

	arcLen / circumference = degree ratio (Meaing 10 degress over 360 degrees)


...........................................
Law of Cosines (lowercase is length, Upper is Angle)
    C
   /\ 
b /  \ a
A/____\ B
   c
longer side is C

	*when knowing 2 angles, subtract both from 180 to get remaining angle.

	SSS : Solve only knowing sides Side-Side-Side  
	cos(C) = (a^2 + b^2 - c^2) / 2ab
	cos(A) = (b^2 + c^2 - a^2) / 2bc
	cos(B) = (c^2 + a^2 - b^2) / 2ca


	SSA : Solve length if 2 sides and its angle is known
	c^2 = a^2 + b^2 - 2ab cos(C)
	a^2 = b^2 + c^2 - 2bc cos(A)
	b^2 = c^2 + a^2 - 2ca cos(B)

Law of Sines
	
	SSA : find Angle of C when knowning Length of A and B, angle of B.
	sin(C) = (a * Math.sin(B)) / b   



...........................................
Projections


Closet Point on a plane from a point.
    p = point
	v = p - planePoint  //vector length from point to a plane's point.
	n = the plane's unit length vector direction
	len = v dot n
	pos = p - (n * len)

Intersection Point between a Plane and a Ray

	dot( planePos-rayOrigin, planeNorm ) / dot(rayVecLen, planeNorm);


...........................................
Kinematic / suvat Equations
https://www.youtube.com/watch?v=v1V3T5BPd7E
https://www.youtube.com/watch?v=phMZQNu0ZFM
https://www.youtube.com/watch?v=IvT8hjy6q4o

s = displacement (distance)
u = inital velocity
v = final velocity
a = acceleration
t = total time

1. s = (( u + v ) / 2) * t
	Average Velocity = displacement / time 
	(inital v + final v) / 2 = displayment / time

2. v = u + a * t
	a = (v - u) / t
	t = (v - u) / a
	Constant Accel = (change of velocity) / time
	Constant Accel = (final vel - initial vel) / time

3. s = (u * t) + (( a * t^2 ) / 2)

4. s = v * t - ((a * t^2) / 2 )

5. v^2 = u^2 + 2 * a * s
	u^2 = v^2 - 2 * a * s

6. s = (v^2 - u^2) / (2 * a)






